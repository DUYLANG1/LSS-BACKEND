generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  skills        Skill[]
  sentRequests     ExchangeRequest[] @relation("SentRequests")
  receivedRequests ExchangeRequest[] @relation("ReceivedRequests")
}

model Skill {
  id          String    @id @default(cuid())
  title       String
  description String
  category    String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ExchangeRequest {
  id              String    @id @default(cuid())
  fromUserId      String
  toUserId        String
  fromUser        User      @relation("SentRequests", fields: [fromUserId], references: [id])
  toUser          User      @relation("ReceivedRequests", fields: [toUserId], references: [id])
  offeredSkillId  String
  requestedSkillId String
  status          String    @default("pending") // pending, accepted, rejected
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  skills      Skill[]
}

// Example rating model
model Exchange {
  id              String    @id @default(cuid())
  request         ExchangeRequest @relation(fields: [requestId], references: [id])
  requestId       String    @unique
  fromUserRating  Int?      @default(0)
  toUserRating    Int?      @default(0)
  feedback        String?
  completedAt     DateTime  @default(now())
}